{"version":3,"sources":["apiConfig.js","services/authService.js","components/Login.js","components/Signup.js","components/AddTask.js","components/Task.js","services/headerService.js","components/Home.js","App.js","index.js"],"names":["API_URL","signup","email","username","password","a","fetch","method","body","JSON","stringify","headers","response","login","logout","user","parse","localStorage","getItem","removeItem","refreshToken","refreshAuthLogic","failedRequest","axios","post","tokens","data","console","log","setItem","config","accessToken","Promise","resolve","authService","getCurrentUser","isJWTExpired","AuthService","jwt_decode","exp","Date","now","Login","setUsername","setIsAuth","useState","errors","setErrors","validationSchema","Yup","shape","required","max","handleSubmit","values","text","json","ok","decodedJWT","name","className","initialValues","onSubmit","touched","handleChange","handleBlur","Form","Group","controlId","Label","Control","type","placeholder","onChange","onBlur","value","to","Button","variant","general","Signup","AddTask","addTask","title","completed","as","Task","id","description","changeTaskState","editTask","deleteTask","show","setShow","newTitle","setTitle","newBody","setBody","handleClose","Col","Row","Badge","bg","md","size","onClick","Modal","onHide","Header","closeButton","Title","Body","e","target","Footer","editTaskHandler","getJWTHeader","Home","tasks","setTasks","addShow","setAddShow","delShow","setDelShow","editShow","setEditShow","showSpinner","setShowSpinner","createAuthRefreshInterceptor","useEffect","getTasks","get","newTask","resetFlashes","task","find","patch","delete","Container","Alert","onClose","dismissible","style","padding","display","justifyContent","Spinner","animation","role","map","index","App","isAuth","logOut","decodedAccessToken","PrivateRoute","isAuthenticated","auth","children","PrivateRouteLogin","href","Card","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e71e9230.chunk.js","sourcesContent":["export const API_URL = 'https://rest-todoapp.herokuapp.com/api';","import axios from 'axios';\r\nimport { API_URL } from '../apiConfig';\r\nimport AuthService from \"../services/authService\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst signup = async (email, username, password) => {\r\n  const response = await fetch(API_URL + \"/signup\", {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      email,\r\n      password,\r\n      username\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n  return response;\r\n};\r\n\r\nconst login = async (email, password) => {\r\n  const response = await fetch(API_URL + \"/login\", {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      email,\r\n      password\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n  return response;\r\n};\r\n\r\nconst logout = async () => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  localStorage.removeItem(\"user\");\r\n\r\n  await fetch(API_URL + '/logout', {\r\n    method: 'DELETE',\r\n    body: JSON.stringify({\r\n      refreshToken: user.refreshToken\r\n    })\r\n  });\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nconst refreshAuthLogic = async (failedRequest) => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  try {\r\n    const response = await axios.post(API_URL + '/refresh', { 'refreshToken': user.refreshToken });\r\n    const tokens = response.data\r\n    console.log('Got new access token and refresh token');\r\n\r\n    localStorage.removeItem('user');\r\n    localStorage.setItem('user', JSON.stringify(tokens));\r\n\r\n    failedRequest.response.config.headers['Authorization'] = 'Bearer ' + tokens.accessToken;\r\n    return Promise.resolve();\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nconst isJWTExpired = () => {\r\n  const user = AuthService.getCurrentUser();\r\n  const decodedRefreshToken = jwt_decode(user.refreshToken);\r\n\r\n  return decodedRefreshToken.exp * 1000 < Date.now();\r\n}\r\n\r\nconst authService = {\r\n  signup,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  refreshAuthLogic,\r\n  isJWTExpired\r\n};\r\n\r\nexport default authService;\r\n","import React, { useState } from \"react\";\r\nimport AuthService from \"../services/authService\";\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { Link } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst Login = ({ setUsername, setIsAuth }) => {\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n      .required(\"*Password is required\"),\r\n    email: Yup.string()\r\n      .email(\"*Must be a valid email address\")\r\n      .max(100, \"*Email must be less than 100 characters\")\r\n      .required(\"*Email is required\")\r\n  })\r\n\r\n  const handleSubmit = async values => {\r\n    const { email, password } = values;\r\n    const response = await AuthService.login(email, password);\r\n    const json = await response.text();\r\n    const data = JSON.parse(json);\r\n\r\n    if (!response.ok) {\r\n      setErrors(data);\r\n    } else {\r\n      setIsAuth(true);\r\n      localStorage.setItem(\"user\", JSON.stringify(data));\r\n\r\n      var decodedJWT = jwt_decode(data.accessToken);\r\n      setUsername(decodedJWT.name);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-3 mt-4\">\r\n      <Formik initialValues={{ email: \"\", password: \"\" }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(handleSubmit)}\r\n      >\r\n        {({ values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n        }) => (\r\n\r\n          <Form onSubmit={handleSubmit}>\r\n            <h1 className=\"text-center\"> Login </h1>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={handleChange} onBlur={handleBlur} value={values.email} className={touched.email && errors.email ? \"error\" : null}\r\n              />\r\n              {touched.email && errors.email ? (\r\n                <div className=\"error-message\">{errors.email}</div>\r\n              ) : null}\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                name=\"password\" type=\"password\" onChange={handleChange} onBlur={handleBlur} placeholder=\"Password\" value={values.password} className={touched.password && errors.password ? \"error\" : null}\r\n              />\r\n              {touched.password && errors.password ? (\r\n                <div className=\"error-message\">{errors.password}</div>\r\n              ) : null}\r\n            </Form.Group>\r\n            Don't have an account? <Link to={\"/signup\"}>\r\n              Sign up\r\n            </Link>! <div></div>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" className=\"mt-4\" >\r\n              Log In\r\n            </Button >\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      {errors.general && (<p className='text-danger text-end'>{errors.general}</p>)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport AuthService from \"../services/authService\";\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport * as Yup from 'yup'\r\nimport { Formik } from 'formik';\r\nimport { Link } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst Signup = ({ setIsAuth, setUsername }) => {\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n      .required(\"*Password is required\"),\r\n    email: Yup.string()\r\n      .email(\"*Must be a valid email address\")\r\n      .max(100, \"*Email must be less than 100 characters\")\r\n      .required(\"*Email is required\"),\r\n    username: Yup.string()\r\n      .max(15, \"*Username must be less than 15 characters\")\r\n      .required(\"*Username is required\"),\r\n  })\r\n\r\n  const handleSubmit = async (values) => {\r\n    const { email, password, username } = values;\r\n\r\n    const response = await AuthService.signup(email, username, password);\r\n    const json = await response.text();\r\n    const data = JSON.parse(json);\r\n\r\n    if (!response.ok) {\r\n      setErrors(data);\r\n    } else {\r\n      setIsAuth(true);\r\n      localStorage.setItem(\"user\", JSON.stringify(data));\r\n\r\n      var decodedJWT = jwt_decode(data.accessToken);\r\n      setUsername(decodedJWT.name);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-3 mt-4\">\r\n      <Formik initialValues={{ email: \"\", password: \"\", username: '' }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(handleSubmit)}\r\n      >\r\n        {({ values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <h1 className=\"text-center\"> Signup </h1>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                name=\"email\" type=\"email\" placeholder=\"Enter email\" onChange={handleChange} onBlur={handleBlur} value={values.email} className={touched.email && errors.email ? \"error\" : null}\r\n              />\r\n              {touched.email && errors.email ? (\r\n                <div className=\"error-message\">{errors.email}</div>\r\n              ) : null}\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                name=\"username\" type=\"text\" placeholder=\"Enter your username\" onChange={handleChange} onBlur={handleBlur} value={values.username} className={touched.username && errors.username ? \"error\" : null}\r\n              />\r\n              {touched.username && errors.username ? (\r\n                <div className=\"error-message\">{errors.username}</div>\r\n              ) : null}\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                name=\"password\" type=\"password\" onChange={handleChange} onBlur={handleBlur} placeholder=\"Password\" value={values.password} className={touched.password && errors.password ? \"error\" : null}\r\n              />\r\n              {touched.password && errors.password ? (\r\n                <div className=\"error-message\">{errors.password}</div>\r\n              ) : null}\r\n            </Form.Group>\r\n            Already have an acount? <Link to={\"/login\"}>\r\n              Log in!\r\n            </Link>! <div></div>\r\n            <Button variant=\"primary\" type=\"submit\" className=\"mt-3\" >\r\n              Sign Up\r\n            </Button >\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      {errors.email && (<p className='text-danger text-end'>{errors.email}</p>)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import { Form, Button } from 'react-bootstrap'\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\n\nconst AddTask = ({ addTask, errors }) => {\n\tconst handleSubmit = values => {\n\t\tconst { body, title } = values;\n\t\taddTask({\n\t\t\ttitle,\n\t\t\tbody,\n\t\t\tcompleted: false,\n\t\t})\n\t}\n\n\tconst validationSchema = Yup.object().shape({\n\t\ttitle: Yup.string()\n\t\t\t.max(100, \"*Title must be less than 100 characters\")\n\t\t\t.required(\"*Title is required\"),\n\t\tbody: Yup.string()\n\t\t\t.max(250, \"*Email must be less than 100 characters\")\n\t\t\t.required(\"*Description is required\")\n\t})\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"p-3 mt-4\">\n\t\t\t\t<Formik initialValues={{ title: \"\", body: \"\" }}\n\t\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t\t\tonSubmit={(handleSubmit)}\n\t\t\t\t>\n\t\t\t\t\t{({ values,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t}) => (\n\n\t\t\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<h3 className='text-center'>Tasks</h3>\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\">\n\t\t\t\t\t\t\t\t<Form.Label>Task title</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tname=\"title\" type=\"text\" placeholder=\"Enter title\" onChange={handleChange} onBlur={handleBlur} value={values.title} className={touched.title && errors.title ? \"error\" : null}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{touched.title && errors.title ? (\n\t\t\t\t\t\t\t\t\t<div className=\"error-message\">{errors.title}</div>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n\t\t\t\t\t\t\t\t<Form.Label>Task description</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tas=\"textarea\" name=\"body\" type=\"text\" onChange={handleChange} onBlur={handleBlur} placeholder=\"Enter description\" value={values.body} className={touched.body && errors.body ? \"error\" : null}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{touched.body && errors.body ? (\n\t\t\t\t\t\t\t\t\t<div className=\"error-message\">{errors.body}</div>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\" className=\"mt-2 mb-4\" >\n\t\t\t\t\t\t\t\tAdd Task\n\t\t\t\t\t\t\t</Button >\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t\t{errors.general && (<p className='text-danger text-end'>{errors.general}</p>)}\n\n\t\t\t</div>\n\n\t\t</div>\n\t)\n}\n\nexport default AddTask","import React, { useState } from 'react'\nimport { Row, Col, Form, Button, Modal, Badge } from 'react-bootstrap'\n\n\nconst Task = ({ id, title, description, completed, changeTaskState, editTask, deleteTask }) => {\n\tconst [show, setShow] = useState(false);\n\tconst [newTitle, setTitle] = useState(title)\n\tconst [newBody, setBody] = useState(description)\n\n\tconst handleClose = () => {\n\t\tsetShow(false);\n\t\tsetTitle(title)\n\t\tsetBody(description)\n\t}\n\n\tconst handleShow = () => {\n\t\tsetTitle(title)\n\t\tsetBody(description)\n\t\tsetShow(true);\n\t}\n\n\tconst editTaskHandler = (title, body) => {\n\t\thandleClose();\n\t\tconst task = {\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tbody,\n\t\t}\n\n\t\tif (title !== '' && body !== '') {\n\t\t\teditTask(task)\n\t\t\tsetTitle(title)\n\t\t\tsetBody(body)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Col className='justify-content-center ps-5 pb-3'>\n\t\t\t\t<Row className='border-bottom'>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<h5>{title}</h5>\n\t\t\t\t\t\t<p>{description}</p>\n\t\t\t\t\t\t<p>{completed ? <Badge bg=\"success\" className='my-2'>Completed!</Badge> : ''}</p>\n\t\t\t\t\t</Col>\n\n\t\t\t\t\t<Col md={2} className='p-2'>\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Button variant='info' size=\"sm\" className='my-1 btn-block' onClick={handleShow}>\n\t\t\t\t\t\t\t\tEdit</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t{completed ?\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<Button variant='secondary' size=\"sm\" className='my-1 btn-block' onClick={() => changeTaskState(id)}>Undo</Button>\n\t\t\t\t\t\t\t</Form> :\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<Button variant='success' size=\"sm\" className='my-1 btn-block' onClick={() => changeTaskState(id)}>Complete</Button>\n\t\t\t\t\t\t\t</Form>}\n\t\t\t\t\t\t<Form  >\n\t\t\t\t\t\t\t<Button variant='danger' size=\"sm\" className='my-1 btn-block' onClick={() => deleteTask(id)}>Delete</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t<Modal.Title>Edit Task</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Form.Group controlId='title'>\n\t\t\t\t\t\t\t\t<Form.Label>Title</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control type='text' value={newTitle} onChange={e => setTitle(e.target.value)} />\n\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t<Form.Group controlId='description'>\n\t\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control type='text' value={newBody} onChange={e => setBody(e.target.value)} />\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\n\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={() => editTaskHandler(newTitle, newBody)}>\n\t\t\t\t\t\t\tSave Changes\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Modal.Footer>\n\t\t\t\t</Modal>\n\t\t\t</Col>\n\t\t</div >\n\t)\n}\n\nexport default Task","export default function getJWTHeader() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.accessToken) {\r\n    return {\r\n      headers: {\r\n        'Authorization': 'Bearer ' + user.accessToken\r\n      }\r\n    }\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AuthService from \"../services/authService\";\r\nimport AddTask from './AddTask.js'\r\nimport Task from './Task'\r\nimport { Container, Row, Col, Spinner } from 'react-bootstrap'\r\nimport getJWTHeader from \"../services/headerService\";\r\nimport { Alert } from 'react-bootstrap'\r\nimport axios from 'axios';\r\nimport createAuthRefreshInterceptor from 'axios-auth-refresh';\r\nimport { API_URL } from '../apiConfig';\r\n\r\nconst Home = () => {\r\n  const [tasks, setTasks] = useState([])\r\n  const [errors, setErrors] = useState([])\r\n  const [addShow, setAddShow] = useState(false);\r\n  const [delShow, setDelShow] = useState(false);\r\n  const [editShow, setEditShow] = useState(false);\r\n  const [showSpinner, setShowSpinner] = useState(true);\r\n\r\n  createAuthRefreshInterceptor(axios, AuthService.refreshAuthLogic);\r\n\r\n  useEffect(() => {\r\n    if (AuthService.getCurrentUser()) {\r\n      getTasks();\r\n    }\r\n  }, []);\r\n\r\n  const getTasks = async () => {\r\n    try {\r\n      const response = await axios.get(API_URL + '/tasks', getJWTHeader());\r\n      const tasks = response.data;\r\n\r\n      setTasks(tasks);\r\n      setShowSpinner(false);\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const addTask = async newTask => {\r\n    try {\r\n      await axios.post(API_URL + '/tasks', newTask, getJWTHeader());\r\n      getTasks();\r\n      resetFlashes();\r\n      setAddShow(true);\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const changeTaskState = async id => {\r\n    const task = tasks.find(task => task.id === id);\r\n    task.completed = !task.completed;\r\n    try {\r\n      await axios.patch(API_URL + `/tasks/${id}`, task, getJWTHeader());\r\n      getTasks();\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const editTask = async task => {\r\n    try {\r\n      await axios.patch(API_URL + `/tasks/${task.id}`, task, getJWTHeader());\r\n      resetFlashes();\r\n      setEditShow(true);\r\n      getTasks();\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const deleteTask = async id => {\r\n    try {\r\n      await axios.delete(API_URL + `/tasks/${id}`, getJWTHeader());\r\n      resetFlashes();\r\n      setDelShow(true);\r\n      getTasks();\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  };\r\n\r\n  const resetFlashes = () => {\r\n    setAddShow(false);\r\n    setDelShow(false);\r\n    setEditShow(false);\r\n  }\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      {AuthService.getCurrentUser &&\r\n        <Container>\r\n          <Row className='justify-content-center'>\r\n            <div className=\"mt-2\">\r\n              <Alert onClose={() => setAddShow(false)} dismissible show={addShow} variant='success'>\r\n                Task was added\r\n              </Alert>\r\n              <Alert onClose={() => setDelShow(false)} dismissible show={delShow} variant='danger'>\r\n                Task was deleted\r\n              </Alert>\r\n              <Alert onClose={() => setEditShow(false)} dismissible show={editShow} variant='warning'>\r\n                Task was edited\r\n              </Alert>\r\n            </div>\r\n            <Col>\r\n              <AddTask addTask={addTask} errors={errors} setErrors={setErrors} />\r\n              {\r\n                showSpinner ?\r\n                  <div style={{ padding: '15px', display: 'flex', justifyContent: 'center' }}>\r\n                    <Spinner animation=\"border\" variant=\"info\" role=\"status\">\r\n                      <span className=\"visually-hidden text-center p-3\">Loading...</span>\r\n                    </Spinner>\r\n                  </div>\r\n                  :\r\n                  tasks.map((task, index) => (\r\n                    <Task key={index} errors={errors} setErrors={setErrors} id={task.id} title={task.title} completed={task.completed} description={task.body} changeTaskState={changeTaskState} editTask={editTask} deleteTask={deleteTask} />\r\n                  ))\r\n              }\r\n            </Col>\r\n          </Row>\r\n        </Container>}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Home;\r\n","import { Routes, Route, Link, Navigate } from \"react-router-dom\";\nimport { Container, Row, Col, Card } from 'react-bootstrap'\nimport { useState, useEffect } from \"react\";\nimport AuthService from \"./services/authService\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Home from \"./components/Home\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jwt_decode from \"jwt-decode\";\n\nfunction App() {\n  const [isAuth, setIsAuth] = useState(false);\n  const [username, setUsername] = useState('');\n\n  const logOut = () => {\n    AuthService.logout();\n    setIsAuth(false);\n  };\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      if (AuthService.isJWTExpired()) {\n        console.log('Refresh Token expired');\n        logOut();\n        return;\n      }\n\n      setIsAuth(true);\n      const decodedAccessToken = jwt_decode(user.accessToken);\n      setUsername(decodedAccessToken.name);\n    }\n  }, []);\n\n  const PrivateRoute = ({ auth: { isAuthenticated }, children }) => {\n    return isAuthenticated ? children : <Navigate to=\"/login\" />;\n  };\n\n  const PrivateRouteLogin = ({ auth: { isAuthenticated }, children }) => {\n    return isAuthenticated ? children : <Navigate to=\"/home\" />;\n  };\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <div className=\"container\">\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/\"} className=\"nav-link\">\n                <strong> MyTasks</strong>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <a href=\"https://github.com/ilyamur/mytasks_app\" className=\"nav-link\">\n                GitHub\n              </a>\n            </li>\n          </div>\n\n          {isAuth ? (\n            <div className=\"navbar-nav ms-auto\">\n              <li className=\"nav-item\">\n                <span className=\"nav-link\">\n                  Welcome <strong>{username} </strong>\n                </span>\n              </li>\n              <li className=\"nav-item\">\n\n                <Link to={\"/login\"} className=\"nav-link\" onClick={logOut}>\n                  Logout\n                </Link>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ms-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/signup\"} className=\"nav-link\">\n                  Sign up\n                </Link>\n              </li>\n            </div>\n          )}\n        </div>\n      </nav>\n\n      <div className=\"container\">\n        <Container>\n          <Row className='justify-content-center pt-5'>\n            <Col md=\"8\">\n              <Card>\n                <Routes>\n                  <Route path=\"/\" element={<PrivateRoute auth={{ isAuthenticated: isAuth }} > <Home /> </PrivateRoute>}\n                  />\n                  <Route path=\"/home\" element={<PrivateRoute auth={{ isAuthenticated: isAuth }} > <Home /> </PrivateRoute>}\n                  />\n\n                  <Route path=\"/signup\" element={<PrivateRouteLogin auth={{ isAuthenticated: !isAuth }} > <Signup setIsAuth={setIsAuth} username={username} setUsername={setUsername} /> </PrivateRouteLogin>}\n                  />\n                  <Route path=\"/login\" element={<PrivateRouteLogin auth={{ isAuthenticated: !isAuth }} > <Login username={username} setUsername={setUsername} setIsAuth={setIsAuth} /> </PrivateRouteLogin>}\n                  />\n                </Routes>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </div >\n\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from 'react-router-dom'\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}